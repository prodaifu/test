分支管理-创建与合并分支
使用github远程仓库
一，远程库存配置
创建SSH Key
在用户主目录下，看看.ssh目录下有没有id_rsa和id_rsa.pub这两个文件
如果没有，打开Git Bash，创建SSH Key：
#$ ssh-keygen -t rsa -C "youremail@example.com"
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面：

二，添加远程仓库
把本地仓库的内容推送到GitHub仓库
1. 把一个已有的本地仓库与远程库关联
git remote add origin git@github.com:leijhArvin/repository.git
2. 下一步，就可以把本地库的所有内容推送到远程库上：
$ git push -u origin master
由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。
$ git push origin master

小结

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；

关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！
三，从远程仓库克隆
$ git clone git@github.com:leijhArvin/myerp.git

使用码云

$ git push --set-upstream origin master
